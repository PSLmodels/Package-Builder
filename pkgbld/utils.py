"""
Package-Builder utility functions.
"""
# CODING-STYLE CHECKS:
# pycodestyle utils.py
# pylint --disable=locally-disabled utils.py

import subprocess
import re
import platform
import sys


def os_call(cmd):
    """
    Execute specified cmd in operating-system subprocess.
    """
    try:
        subprocess.check_call(cmd, shell=True)
    except subprocess.CalledProcessError as err:
        msg = 'non-zero return code {} generated by command:\n{}'
        raise OSError(msg.format(err.returncode, cmd))


def specify_version(version):
    """
    Set version in conda.recipe/meta.yaml file.
    """
    filename = 'conda.recipe/meta.yaml'
    pattern = r'version: .*'
    replacement = 'version: {}'.format(version)
    lines = []
    with open(filename, 'r') as mfile:
        for line in mfile.readlines():
            lines.append(re.sub(pattern, replacement, line))
    with open(filename, 'w') as mfile:
        for line in lines:
            mfile.write(line)


def conda_platform_name():
    """
    Return conda name of local operating-system platform.
    """
    system_ = platform.system()
    if system_ == 'Darwin':
        conda_name = 'osx'
    elif system_ == 'Linux':
        conda_name = 'linux'
    elif system_ == 'Windows':
        conda_name = 'win'
    else:
        msg = 'OS=<{}> is not Windows, Linux, or Darwin(OSX).'
        raise OSError(msg.format(system_))
    # For the following bit-size code, see this link:
    # https://docs.python.org/3.6/library/platform.html#platform.architecture
    is_64bit = sys.maxsize > 2 ** 32
    n_bits = '64' if is_64bit else '32'
    return conda_name + '-' + n_bits
